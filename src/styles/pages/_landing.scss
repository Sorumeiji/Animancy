@use "../abstracts" as *;

.landing {
  .landing-fade {
    img {
      opacity: 0.3;
      position: absolute;
      width: 100%;
      height: 50%;
      object-fit: cover;
      object-position: bottom;
      inset: 0;
      -webkit-mask-image: linear-gradient(rgb(0 0 0 / 1), rgb(0 0 0 / 0.5) 30%, rgb(0 0 0 / 0));
      mask-image: linear-gradient(rgb(0 0 0 / 1), rgb(0 0 0 / 0.5) 30%, rgb(0 0 0 / 0));
    }
  }

  .hero {
    background-image: url("/img/background.svg");
    background-size: contain;
    position: relative;

    header {
      margin-inline: auto;
      padding-block: $space-size-32;
      h1 {
        padding-block: $space-size-32;
        line-height: 0.5;
      }

      p {
        line-height: 1;
      }
    }

    .summary {
      padding-block: $space-size-16;
    }

    .svg-images {
      display: none;
    }

    @media screen and (min-width: breakpoint(medium)) {
      .svg-images {
        padding-block: $space-size-16;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
    }

    @media screen and (min-width: breakpoint(large)) {
    }

    @media screen and (min-width: breakpoint(x-large)) {
    }
  }

  .statement {
    .summary {
      margin-inline: auto;
      text-align: center;
    }
  }

  .process {
    .process {
      margin-top: 1em;
    }

    @media screen and (min-width: breakpoint(medium)) {
      .process {
        margin-top: 0;
      }

      .process__content {
        --min: 40ch;
        display: flex;
        flex-wrap: wrap;
        gap: $space-size-16;

        & > * {
          flex: 1 1 var(--min);
        }
      }
    }

    @media screen and (min-width: breakpoint(large)) {
    }

    @media screen and (min-width: breakpoint(x-large)) {
    }
  }

  .services {
    padding-block: $space-size-16;

    .detail {
      margin-top: 1em;
    }

    @media screen and (min-width: breakpoint(medium)) {
      .detail {
        margin-top: 0;
      }

      .services__content {
        --min: 40ch;
        display: flex;
        flex-wrap: wrap;
        align-items: flex-end;
        gap: $gap-width-default;

        & > * {
          flex: 1 1 var(--min);
        }
      }
    }

    @media screen and (min-width: breakpoint(large)) {
    }

    @media screen and (min-width: breakpoint(x-large)) {
    }
  }

  .demos {
    .lang-stack {
      display: flex;
      gap: $gap-width-default;
      padding-block: $space-size-16;
    }

    .showcase__content {
      --min: 20ch;
      display: flex;
      flex-wrap: wrap;
      gap: $space-size-16;

      & > * {
        flex: 1 1 var(--min);
      }

      img {
        border-radius: 0.3em;
        object-fit: cover;
      }
    }

    @media screen and (min-width: breakpoint(medium)) {
    }

    @media screen and (min-width: breakpoint(large)) {
    }

    @media screen and (min-width: breakpoint(x-large)) {
      .showcase__content {
        img {
          height: 273px;
        }
      }
    }
  }

  .conculsion {
    .conculsion__images {
      display: none;
    }

    .content {
      padding-block: $space-size-16;
    }

    @media screen and (min-width: breakpoint(medium)) {
      .conculsion__images {
        display: flex;
        gap: $gap-width-default;
        padding-block: $space-size-16;
      }
    }

    @media screen and (min-width: breakpoint(large)) {
    }

    @media screen and (min-width: breakpoint(x-large)) {
    }
  }
}
